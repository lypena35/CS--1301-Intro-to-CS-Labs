/*1. powerN
Given base and n that are both 1 or more, compute recursively (no loops)
the value of base to the n power, so powerN(3, 2) is 9 (3 squared). Results:powerN(3, 1) → 3,
powerN(3, 2) → 9,powerN(3, 3) → 27*/

import java.util.Scanner;
public class powerNum {
 public static int powerN(int base, int n) {
  if (n < 0) {
   return base * powerN(base, n + 1);
  } else if (n > 0) {
   return base * powerN(base, n - 1);
  } else {
   return 1;
  }
 }
 public static void main(String[] args) {
  int base = 0;
  int n = 0;
  int result;
  Scanner input = new Scanner(System.in);
  System.out.print("Enter base number:");
  base = input.nextInt();
  System.out.print("Enter the power number:");
  n = input.nextInt();
  result = powerNum.powerN(base, n);
  System.out.println(result);
 }
}
